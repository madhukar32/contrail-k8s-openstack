---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contrail-config
  namespace: kube-system
data:
  global-config: |-
    [GLOBAL]
    cloud_orchestrator = kubernetes
    config_nodes = 172.16.65.159
    controller_nodes = 172.16.65.159
    analytics_nodes = 172.16.65.159
  agent-config: |-
    [AGENT]
    compile_vrouter_module = True
    # Optional ctrl_data_network, if different from management
    ctrl_data_network = "172.16.65.0/24"
    [KEYSTONE]
    admin_password = contrail123
    admin_port = 35357
    admin_tenant = admin
    admin_user = admin
    auth_protocol = http
    #auth_url = http://172.16.65.159:35357/v2.0
    insecure = false
    ip = 172.16.65.159
    project_domain_name = Default
    user_domain_name = Default
    version = v2.0
  kubemanager-config: |-
    [KUBERNETES]
    cluster_name = k8s-default
    cluster_project = {}
    cluster_network = {'domain': 'default-domain', 'project': 'admin', 'name': 'k8s_default_vn'}
    service_subnets = 10.96.0.0/12
    pod_subnets = 10.32.0.0/12
    api_server = 172.16.65.156
    [AUTH]
    ip = 172.16.65.159
    admin_password = contrail123
    admin_user = admin
    admin_tenant = admin
  kubernetes-agent-config: |-
    [AGENT]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vrouter-bin
  namespace: kube-system
data:
  register-vrouter.sh: |+
    #!/bin/sh
    
    set -ex
    
    function register-vrouter {
    
            /usr/share/contrail-utils/provision_vrouter.py \
              --api_server_ip 172.16.65.159  \
              --host_name $HOST_NAME \
              --host_ip $HOST_IP \
              --admin_user admin \
              --admin_password contrail123 \
              --admin_tenant_name admin \
              --openstack_ip 172.16.65.159 \
               || echo "Contrail api server is not up" && return 1
    
            return ""
    }
    
    while ! [[ -z $(register-vrouter) ]];do
            echo "Waiting for contrail api server to come up"
            sleep 1s
    done
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-kube-manager
  namespace: kube-system
  labels:
    app: contrail-kube-manager
spec:
  template:
    metadata:
      labels:
        app: contrail-kube-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: In
                values:
                - "true"
            - matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      automountServiceAccountToken: false
      hostNetwork: true
      containers:
      - name: contrail-kube-manager
        image: "contrail-kube-manager-ubuntu16.04:4.1.0.0-7"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /tmp/contrailctl
          name: tmp-contrail-config
        - mountPath: /tmp/serviceaccount
          name: pod-secret
      volumes:
      - name: tmp-contrail-config
        configMap:
          name: contrail-config
          items:
          - key: global-config
            path: global.conf
          - key: kubemanager-config
            path: kubemanager.conf
      - name: pod-secret
        secret:
          secretName: contrail-kube-manager-token
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-agent
  namespace: kube-system
  labels:
    app: contrail-agent
spec:
  template:
    metadata:
      labels:
        app: contrail-agent
    spec:
      #Disable affinity for single node setup
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: NotIn
                values:
                - "true"
            - matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: Exists
      #Enable tolerations for single node setup
      #tolerations:
      #- key: node-role.kubernetes.io/master
      #  operator: Exists
      #  effect: NoSchedule
      automountServiceAccountToken: false
      hostNetwork: true
      initContainers:
      - name: contrail-kubernetes-agent
        image: "contrail-kubernetes-agent-ubuntu16.04:4.1.0.0-7"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /tmp/contrailctl
          name: tmp-contrail-config
        - mountPath: /var/lib/contrail/
          name: var-lib-contrail
        - mountPath: /host/etc_cni
          name: etc-cni
        - mountPath: /host/opt_cni_bin
          name: opt-cni-bin
        - mountPath: /var/log/contrail/cni
          name: var-log-contrail-cni
      #- name: register-vrouter-to-controller
      #  image: contrail-agent-ubuntu16.04:4.1.0.0-7
      #  command:
      #  - /tmp/register-vrouter.sh
      #  env:
      #  - name: HOST_NAME
      #    valueFrom:
      #      fieldRef:
      #        fieldPath: spec.nodeName
      #  - name: HOST_IP
      #    valueFrom:
      #      fieldRef:
      #        fieldPath: status.hostIP
      #  volumeMounts:
      #  - name: register-vrouter
      #    mountPath: /tmp/register-vrouter.sh
      #    subPath: register-vrouter.sh
      containers:
      - name: contrail-agent
        image: "contrail-agent-ubuntu16.04:4.1.0.0-7"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /tmp/contrailctl
          name: tmp-contrail-config
        - mountPath: /var/lib/contrail/
          name: var-lib-contrail
        - mountPath: /host/etc_cni
          name: etc-cni
        - mountPath: /host/opt_cni_bin
          name: opt-cni-bin
        # This is a workaround just to make sure the directory is created on host
        - mountPath: /var/log/contrail/cni
          name: var-log-contrail-cni
        - mountPath: /tmp/serviceaccount
          name: pod-secret
      volumes:
      - name: tmp-contrail-config
        configMap:
          name: contrail-config
          items:
          - key: global-config
            path: global.conf
          - key: agent-config
            path: agent.conf
          - key: kubemanager-config
            path: kubemanager.conf
          - key: kubernetes-agent-config
            path: kubernetesagent.conf
      - name: pod-secret
        secret:
          secretName: contrail-kube-manager-token
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: var-lib-contrail
        hostPath:
          path: /var/lib/contrail/
      - name: etc-cni
        hostPath:
          path: /etc/cni
      - name: opt-cni-bin
        hostPath:
          path: /opt/cni/bin
      - name: var-log-contrail-cni
        hostPath:
          path: /var/log/contrail/cni/
      - name: register-vrouter
        configMap:
          name: vrouter-bin
          defaultMode: 0555
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: contrail-kube-manager
  namespace: kube-system
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contrail-kube-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: contrail-kube-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contrail-kube-manager
subjects:
- kind: ServiceAccount
  name: contrail-kube-manager
  namespace: kube-system
---
apiVersion: v1
kind: Secret
metadata:
  name: contrail-kube-manager-token
  namespace: kube-system
  annotations:
    kubernetes.io/service-account.name: contrail-kube-manager
type: kubernetes.io/service-account-token
---
